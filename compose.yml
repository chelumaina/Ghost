name: ghost

# Template to share volumes and environment variable between all services running the same base image
x-service-template: &service-template
  volumes:
    - .:/home/ghost
    # - ${SSH_AUTH_SOCK}:/ssh-agent
    # - ${HOME}/.gitconfig:/root/.gitconfig:ro
    - node_modules_ghost_root:/home/ghost/node_modules:delegated
    - node_modules_ghost_admin:/home/ghost/ghost/admin/node_modules:delegated
    - node_modules_ghost_core:/home/ghost/ghost/core/node_modules:delegated
    - node_modules_ghost_custom-fonts:/home/ghost/ghost/custom-fonts/node_modules:delegated
    - node_modules_ghost_email-addresses:/home/ghost/ghost/email-addresses/node_modules:delegated
    - node_modules_ghost_email-service:/home/ghost/ghost/email-service/node_modules:delegated
    - node_modules_ghost_i18n:/home/ghost/ghost/i18n/node_modules:delegated
    - node_modules_ghost_prometheus-metrics:/home/ghost/ghost/prometheus-metrics/node_modules:delegated
    - node_modules_apps_admin-x-activitypub:/home/ghost/apps/admin-x-activitypub/node_modules:delegated
    - node_modules_apps_admin-x-design-system:/home/ghost/apps/admin-x-design-system/node_modules:delegated
    - node_modules_apps_admin-x-framework:/home/ghost/apps/admin-x-framework/node_modules:delegated
    - node_modules_apps_admin-x-settings:/home/ghost/apps/admin-x-settings/node_modules:delegated
    - node_modules_apps_announcement-bar:/home/ghost/apps/announcement-bar/node_modules:delegated
    - node_modules_apps_comments-ui:/home/ghost/apps/comments-ui/node_modules:delegated
    - node_modules_apps_portal:/home/ghost/apps/portal/node_modules:delegated
    - node_modules_apps_posts:/home/ghost/apps/posts/node_modules:delegated
    - node_modules_apps_shade:/home/ghost/apps/shade/node_modules:delegated
    - node_modules_apps_signup-form:/home/ghost/apps/signup-form/node_modules:delegated
    - node_modules_apps_sodo-search:/home/ghost/apps/sodo-search/node_modules:delegated
    - node_modules_apps_stats:/home/ghost/apps/stats/node_modules:delegated
  environment:
    - DEBUG=${DEBUG:-}
    # - SSH_AUTH_SOCK=/ssh-agent
    - NX_DAEMON=${NX_DAEMON:-true}
    - GHOST_DEV_IS_DOCKER=true
    - GHOST_DEV_APP_FLAGS=${GHOST_DEV_APP_FLAGS:-}
    - GHOST_UPSTREAM=${GHOST_UPSTREAM:-}
    - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
    - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-}
    - STRIPE_ACCOUNT_ID=${STRIPE_ACCOUNT_ID:-}


    - url=${url:-}
    - database__client=${database__client:-}
    - database__connection__host=${database__connection__host:-}
    - database__connection__user=${database__connection__user:-}
    - database__connection__password=${database__connection__password:-}
    - database__connection__database=${database__connection__database:-}
    - NODE_ENV=production


    # Email config (example: Mailgun)
    - mail__transport=SMTP
    - mail__options__host=${mail__options__host:-}
    - mail__options__port=${mail__options__port:-}
    - mail__options__secure=true
    - mail__options__service=Direct
    - mail__options__auth__user=${mail__options__auth__user:-}
    - mail__options__auth__pass=${mail__options__auth__pass:-}

 # Redis cache config
    - cache__type=redis
    - cache__options__host=${cache__options__host:-}
    - cache__options__port=${cache__options__port:-}
    - cache__options__password=${cache__options__password:-} # Add if your Redis instance is protected

services:
  ghost:
    <<: *service-template
    container_name: ghost_app_prod
    hostname: ghost_app_prod
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
      target: development
    entrypoint: [ "/home/ghost/.docker/development.entrypoint.sh" ]
    command: [ "yarn", "dev" ]
    # ports:
    #   - "2369:2368" # Ghost
    #   - "4200:4200" # Admin
    #   - "4201:4201" # Admin tests
    #   - "4175:4175" # Portal
    #   - "4176:4176" # Portal HTTPS
    #   - "4177:4177" # Announcement bar
    #   - "4178:4178" # Search
    #   - "6174:6174" # Signup form
    #   - "7173:7173" # Comments
    #   - "7174:7174" # Comments HTTPS
    profiles: [ ghost ]
    expose:
      - 2368
    tty: true
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql:8.4.5
    container_name: ghost-mysql
    hostname: ghost-mysql
    command: --innodb-buffer-pool-size=1G --innodb-log-buffer-size=500M --innodb-change-buffer-max-size=50 --innodb-flush-log-at-trx_commit=0 --innodb-flush-method=O_DIRECT
    # ports:
    #   - 3306:3306
    expose:
      - 3306
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${database__connection__password-}
      MYSQL_DATABASE: ${database__connection__database-}
    restart: always
    volumes:
      - ./.docker/mysql-preload:/docker-entrypoint-initdb.d
      - ./mysql_data/mysql-data:/var/lib/mysql
    healthcheck:
      test: mysql -uroot -p${database__connection__password-wrong} ${database__connection__database-gh} -e 'select 1'
      interval: 1s
      retries: 120
    networks:
      - app-network



  redis:
    image: redis:7.0
    container_name: ghost-redis
    hostname: ghost-redis
    env_file:
      - .env
    # ports:
    #   - 6379:6379
    expose:
      - 6379
    restart: always
    command: [
      "redis-server",
      "--requirepass", "${cache__options__password-}",
      "--masteruser", "scriber",
      "--masterauth", "${cache__options__password-}"
    ]
    environment:
      - REDIS_USER="scriber"
      - REDIS_PASSWORD="${cache__options__password-}"
    volumes:
      - ./redis/redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test:
        - CMD
        - redis-cli
        - --raw
        - incr
        - ping
      interval: 1s
      retries: 120
    networks:
      - app-network


  prometheus:
    profiles: [ monitoring ]
    image: prom/prometheus:v2.55.1
    container_name: ghost-prometheus
    hostname: ghost-prometheus
    # ports:
    #   - 9090:9090
    expose:
      - 9090
    restart: always
    volumes:
      - ./.docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    profiles: [ monitoring ]
    image: grafana/grafana:8.5.27
    container_name: ghost-grafana
    hostname: ghost-grafana
    # ports:
    #   - 3000:3000
    expose:
      - 3000
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./.docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./.docker/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./.docker/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - app-network

  pushgateway:
    profiles: [ monitoring ]
    image: prom/pushgateway:v1.11.1
    container_name: ghost-pushgateway
    # ports:
    #   - 9091:9091
    expose:
      - 9091
    networks:
      - app-network

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: ghost-mailhog
  #   profiles: [ ghost ]
  #   ports:
  #     - "1025:1025" # SMTP server
  #     - "8025:8025" # Web interface
  #   restart: always

networks:
  app-network:
    driver: bridge
    external: true

volumes:
  mysql-data: {}
  redis-data: {}
  node_modules_ghost_root: {}
  node_modules_ghost_admin: {}
  node_modules_ghost_core: {}
  node_modules_ghost_custom-fonts: {}
  node_modules_ghost_email-addresses: {}
  node_modules_ghost_email-service: {}
  node_modules_ghost_i18n: {}
  node_modules_ghost_prometheus-metrics: {}
  node_modules_apps_admin-x-activitypub: {}
  node_modules_apps_admin-x-design-system: {}
  node_modules_apps_admin-x-framework: {}
  node_modules_apps_admin-x-settings: {}
  node_modules_apps_announcement-bar: {}
  node_modules_apps_comments-ui: {}
  node_modules_apps_portal: {}
  node_modules_apps_posts: {}
  node_modules_apps_shade: {}
  node_modules_apps_signup-form: {}
  node_modules_apps_sodo-search: {}
  node_modules_apps_stats: {}
